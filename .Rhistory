source('H:/dev/foos/foos_elo.R', echo=TRUE)
source('H:/dev/foos/foos_elo.R', echo=TRUE)
source('H:/dev/foos/foos_elo.R', echo=TRUE)
source('H:/dev/foos/foos_elo.R', echo=TRUE)
source('H:/dev/foos/foos_elo.R', echo=TRUE)
point_diff=2
margin_of_victory <- log(abs(point_diff)+1)*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
score1 = 10
score2 = 8
elo1=1425
elo2=1626
margin_of_victory <- log(abs(point_diff)+1)*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
abs(point_diff)+1)
abs(point_diff)+1
log(abs(point_diff)+1)
(2.2/((
+     ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
ifelse(score1 > score2, elo1-elo2, elo2-elo1)
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2
ifelse(score1 > score2, elo1-elo2, elo2-elo1)*.001+2.2
log(1)
log(2)
score1=8
score2=10
margin_of_victory <- log(abs(point_diff)+1)*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
margin_of_victory <- log(abs(point_diff))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
margin_of_victory <- log(abs(1))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
margin_of_victory <- log(abs(2))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
margin_of_victory <- log(abs(3))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
margin_of_victory <- log(abs(4))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
score1=10;score2=8
margin_of_victory <- log(abs(1))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
margin_of_victory <- log(abs(2))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
margin_of_victory <- log(abs(3))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
margin_of_victory <- log(abs(4))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
log(abs(4))*(2.2/((
ifelse(score1 > score2, elo1-elo2, elo2-elo1))*.001+2.2))
log(abs(4))*(2.2/((100))*.001+2.2))
log(abs(4))*(2.2/((100)*.001+2.2))
log(abs(4))*(2.2/((-100)*.001+2.2))
log(abs(2))*(2.2/((-100)*.001+2.2))
log(abs(3))*(2.2/((-100)*.001+2.2))
source('H:/dev/foos/foos_elo.R', echo=TRUE)
library(ggplot2)
library(ggplot2)
ggp <- ggplot()
for(game_num in seq_len(nrow(singles_games))) {
singles_elo %<>%
GameUpdate(singles_games[game_num, "t1_p1"],
singles_games[game_num, "t1_score"],
singles_games[game_num, "t2_p1"],
singles_games[game_num, "t2_score"],
print_progress = TRUE)
ggp <- ggp + geom_point(singles_elo, aes(x = game_num, y = elo, col = players))
}
print(ggp)
ggp
ggp+geom_point(singles_elo, aes(x = 1, y = elo, col = players))
ggp+geom_point(singles_elo, aes(x = 1, y = elo))
ggp+geom_point(singles_elo, aes(x = player, y = elo))
ggp+geom_point(data=singles_elo, aes(x = player, y = elo))
ggp+geom_point(data=singles_elo, aes(x = players, y = elo))
ggp+geom_point(data=singles_elo, aes(x = 1, y = elo))
ggp <- ggplot()
for(game_num in seq_len(nrow(singles_games))) {
singles_elo %<>%
GameUpdate(singles_games[game_num, "t1_p1"],
singles_games[game_num, "t1_score"],
singles_games[game_num, "t2_p1"],
singles_games[game_num, "t2_score"],
print_progress = TRUE)
ggp <- ggp + geom_point(data = singles_elo, aes(x = game_num, y = elo, col = players, group = players))
}
print(ggp)
singles_elo
singles_elo %>% mutate(game_num = game_num)
?rbind()
elo_tracker %<>% rbind(singles_elo %>% mutate(game_num = game_num))
elo_tracker <- singles_elo
elo_tracker %<>% rbind(singles_elo %>% mutate(game_num = game_num))
elo_tracker <- singles_elo %>% mutate(game_num = 0)
elo_tracker %<>% rbind(singles_elo %>% mutate(game_num = game_num))
ggp <- ggplot()
elo_tracker <- singles_elo %>% mutate(game_num = 0)
for(game_num in seq_len(nrow(singles_games))) {
singles_elo %<>%
GameUpdate(singles_games[game_num, "t1_p1"],
singles_games[game_num, "t1_score"],
singles_games[game_num, "t2_p1"],
singles_games[game_num, "t2_score"],
print_progress = TRUE)
elo_tracker %<>% rbind(singles_elo %>% mutate(game_num = game_num))
}
ggp <- ggp + geom_point(data = elo_tracker, aes(x = game_num, y = elo, col = players, group = players))
print(ggp)
ggp + geom_line(data = elo_tracker, aes(x = game_num, y = elo, col = players, group = players))
singles_elo <- singles_games %>%
select(players = t2_p1) %>%
rbind("Kevin", "Dc") %>%
distinct %>%
arrange(players) %>%
mutate(elo = 1500 +
ifelse(players %in% first_years, -400,
ifelse(players %in% third_years, 300, 100)))
ggp <- ggplot()
elo_tracker <- singles_elo %>% mutate(game_num = 0)
for(game_num in seq_len(nrow(singles_games))) {
singles_elo %<>%
GameUpdate(singles_games[game_num, "t1_p1"],
singles_games[game_num, "t1_score"],
singles_games[game_num, "t2_p1"],
singles_games[game_num, "t2_score"],
print_progress = TRUE)
elo_tracker %<>% rbind(singles_elo %>% mutate(game_num = game_num))
}
# ggp <- ggp + geom_point(data = singles_elo, aes(x = game_num, y = elo, col = players, group = players))
ggp <- ggp + geom_line(data = elo_tracker, aes(x = game_num, y = elo, col = players, group = players))
print(ggp)
singles_elo <- singles_games %>%
select(players = t2_p1) %>%
rbind("Kevin", "Dc") %>%
distinct %>%
arrange(players) %>%
mutate(elo = 1500 +
ifelse(players %in% first_years, -400,
ifelse(players %in% third_years, 300, 100)))
elo_tracker <- singles_elo %>% mutate(game_num = 0, score_diff = 0)
for(game_num in seq_len(nrow(singles_games))) {
singles_elo %<>%
GameUpdate(singles_games[game_num, "t1_p1"],
singles_games[game_num, "t1_score"],
singles_games[game_num, "t2_p1"],
singles_games[game_num, "t2_score"],
print_progress = TRUE)
elo_tracker %<>%
rbind(
singles_elo %>%
mutate(
game_num = game_num,
score_diff = ifelse(
players == c(singles_games[game_num, "t1_p1"],singles_games[game_num, "t2_p1"]),
abs(singles_games[game_num, "t1_score"]-singles_games[game_num, "t2_score"]),
0)
)
)
}
warnings()
singles_elo <- singles_games %>%
select(players = t2_p1) %>%
rbind("Kevin", "Dc") %>%
distinct %>%
arrange(players) %>%
mutate(elo = 1500 +
ifelse(players %in% first_years, -400,
ifelse(players %in% third_years, 300, 100)))
singles_elo %>%
.[[1]] -> player_list
### Run elo calculation loop
library(ggplot2)
ggp <- ggplot()
elo_tracker <- singles_elo %>% mutate(game_num = 0, score_diff = 0)
for(game_num in seq_len(nrow(singles_games))) {
singles_elo %<>%
GameUpdate(singles_games[game_num, "t1_p1"],
singles_games[game_num, "t1_score"],
singles_games[game_num, "t2_p1"],
singles_games[game_num, "t2_score"],
print_progress = TRUE)
elo_tracker %<>%
rbind(
singles_elo %>%
mutate(
game_num = game_num,
score_diff = ifelse(
players %in% c(singles_games[game_num, "t1_p1"],singles_games[game_num, "t2_p1"]),
abs(singles_games[game_num, "t1_score"]-singles_games[game_num, "t2_score"]),
0)
)
)
}
ggp <- ggplot(data=elo_tracker)
ggp <- ggp +
geom_line(aes(x = game_num, y = elo, col = players, group = players)) +
geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff)) +
ggtitle("")
print(ggp)
View(elo_tracker)
View(singles_games)
singles_elo %>%
mutate(
game_num = game_num,
score_diff = ifelse(
players %in% c(singles_games[game_num, "t1_p1"],singles_games[game_num, "t2_p1"]),
abs(singles_games[game_num, "t1_score"]-singles_games[game_num, "t2_score"]),
0)
)
c(singles_games[game_num, "t1_p1"],singles_games[game_num, "t2_p1"])
singles_games[game_num, "t1_p1"]
singles_games[game_num, "t2_p1"] %>% as.character
singles_elo %>%
mutate(
game_num = game_num,
score_diff = ifelse(
players %in% c(p1, p2),
abs(score1 - score2),
0)
)
p1 <- singles_games[game_num, "t1_p1"] %>% as.character
p2 <- singles_games[game_num, "t2_p1"] %>% as.character
score1 <- singles_games[game_num, "t1_score"] %>% as.numeric
score2 <- singles_games[game_num, "t2_score"] %>% as.numeric
singles_elo %>%
mutate(
game_num = game_num,
score_diff = ifelse(
players %in% c(p1, p2),
abs(score1 - score2),
0)
)
### Create elo table
singles_elo <- singles_games %>%
select(players = t2_p1) %>%
rbind("Kevin", "Dc") %>%
distinct %>%
arrange(players) %>%
mutate(elo = 1500 +
ifelse(players %in% first_years, -400,
ifelse(players %in% third_years, 300, 100)))
singles_elo %>%
.[[1]] -> player_list
### Run elo calculation loop
elo_tracker <- singles_elo %>% mutate(game_num = 0, score_diff = 0)
for(game_num in seq_len(nrow(singles_games))) {
p1 <- singles_games[game_num, "t1_p1"] %>% as.character
p2 <- singles_games[game_num, "t2_p1"] %>% as.character
score1 <- singles_games[game_num, "t1_score"] %>% as.numeric
score2 <- singles_games[game_num, "t2_score"] %>% as.numeric
singles_elo %<>%
GameUpdate(p1,
score1,
p2,
score2,
print_progress = TRUE)
elo_tracker %<>%
rbind(
singles_elo %>%
mutate(
game_num = game_num,
score_diff = ifelse(
players %in% c(p1, p2),
abs(score1 - score2),
0)
)
)
}
# ggp <- ggp + geom_point(data = singles_elo, aes(x = game_num, y = elo, col = players, group = players))
library(ggplot2)
ggp <- ggplot(data=elo_tracker)
ggp <- ggp +
geom_line(aes(x = game_num, y = elo, col = players, group = players)) +
geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff)) +
print(ggp)
ggp <- ggplot(data=elo_tracker)
ggp <- ggp +
geom_line(aes(x = game_num, y = elo, col = players, group = players)) +
geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff))
print(ggp)
ggp <- ggplot(data=elo_tracker)
ggp <- ggp +
geom_line(aes(x = game_num, y = elo, col = players, group = players,
size = score_diff)) +
geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff),
alpha = .5)
print(ggp)
ggp <- ggplot(data=elo_tracker)
ggp <- ggp +
geom_line(aes(x = game_num, y = elo, col = players, group = players)) +
geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff),
alpha = .5)
print(ggp)
ggp <- ggplot(data=elo_tracker) +
geom_line(aes(x = game_num, y = elo, col = players, group = players)) +
geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff),
alpha = .2)
print(ggp)
ggp <- ggplot(data=elo_tracker) +
geom_line(aes(x = game_num, y = elo, col = players, group = players)) +
geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff),
alpha = .2) +
theme_bw()
print(ggp)
ggp <- ggplot(data=elo_tracker) +
geom_line(aes(x = game_num, y = elo, col = players, group = players)) +
geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff),
alpha = .2) +
theme_minimal()
print(ggp)
ggp <- ggplot(data=elo_tracker) +
geom_line(aes(x = game_num, y = elo, col = players, group = players)) +
geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff),
alpha = .2) +
xlab("Game Number") +
ylab("Elo") +
theme_minimal()
print(ggp)
print(singles_elo)
source("foos_chances_matrix.R")
heatmap(player_odds, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
?heatmap
heatmap(player_odds, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
heatmap(player_odds)#, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
heatmap(player_odds, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
as.data.frame(player_odds)
data.frame(player_odds)
as.data.frame(player_odds, row.names = player_list)
names(odds_df) <- player_list
odds_df <- as.data.frame(player_odds, row.names = player_list)
names(odds_df) <- player_list
heatmap(odds_df, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
names(player_odds)
as.data.frame.matrix(player_odds)
install.packages("googlesheets")
p_load(googlesheets)
library(pacman)
p_load(googlesheets)
gs_ls()
source('C:/Users/kevin pan/Dropbox/dev/foos/foos_elo.R', echo=TRUE)
gfoos <- gs_read(gs_title("Foos Scores"))
View(gfoos)
foos <- gs_read(gs_title("Foos Scores"))
source('C:/Users/kevin pan/Dropbox/dev/foos/foos_elo.R', echo=TRUE)
