{
    "collab_server" : "",
    "contents" : "################################################################################\n### Foos Elo\n################################################################################\n\nlibrary(pacman)\np_load(dplyr, magrittr, stringr, knitr, lubridate, googlesheets)\n\nsource(\"foos_functions.R\")\n\n### Read in games history\n# foos <- readxl::read_excel(\"H:/foos.xlsx\")\nfoos <- gs_read(gs_title(\"Foos Scores\"))\n\ncolnames(foos) %<>% make_names\n\nsingles_games <- foos %>% filter(type == \"Singles\") %>%\n  select(game_num,\n         date,\n         t1_p1,\n         t1_score,\n         t2_p1,\n         t2_score) #%>%\n  # mutate(date = dm(date))\n\n### Number of games\nsingles_games %>% group_by(t2_p1) %>%\n  summarise(N=n())\n\n### Baseline experience\nfirst_years <- c(\"Zong\",  \"Hallie\", \"Evan\",  \"Andrea\", \"Kevin\")\nsecond_years <- c(\"Henna\", \"Jamie\", \"Will\", \"Cody\", \"David\", \"Kirby\")\nthird_years <- c(\"Angela\", \"Sam\", \"Dc\")\n\n### Create elo table\nsingles_elo <- singles_games %>%\n  select(t1_p1, t2_p1) %>%\n  stack %>%\n  select(players = values) %>%\n  # rbind(\"Kevin\") %>% #, \"Dc\", \"Kirby\", \"Cody\",\n  distinct %>%\n  arrange(players) %>%\n  mutate(elo = 1500 +\n           ifelse(players %in% first_years, -300,\n           ifelse(players %in% third_years, 300, 100)),\n         number_of_games = 0)\n\nsingles_elo %>%\n  .[[1]] -> player_list\n\n\n### Run elo calculation loop\n\nelo_tracker <- singles_elo %>% mutate(game_num = 0, score_diff = 0)\nfor(game_num in seq_len(nrow(singles_games))) {\n  p1 <- singles_games[game_num, \"t1_p1\"] %>% as.character\n  p2 <- singles_games[game_num, \"t2_p1\"] %>% as.character\n\n  score1 <- singles_games[game_num, \"t1_score\"] %>% as.numeric\n  score2 <- singles_games[game_num, \"t2_score\"] %>% as.numeric\n\n\n  singles_elo %<>%\n    GameUpdate(p1,\n               score1,\n               p2,\n               score2,\n               print_progress = FALSE)\n  elo_tracker %<>%\n    rbind(\n      singles_elo %>%\n        mutate(\n          game_num = game_num,\n          score_diff = ifelse(\n            players %in% c(p1, p2),\n            abs(score1 - score2),\n            0)\n          )\n    )\n}\n\n\n# saveRDS(elo_tracker, \"elo_tracker_first_3_months.Rds\")\n############# Plot ELO #########################################################\nlibrary(ggplot2)\nold_elo_tracker <- readRDS(\"../elo_tracker_first_3_months.Rds\")\n\n\nggp <- ggplot(data=elo_tracker) +\n  geom_line(aes(x = game_num, y = elo, col = players, group = players)) +\n  geom_point(aes(x = game_num, y = elo, col = players, group = players, size = score_diff),\n             alpha = .2) +\n  xlab(\"Game Number\") +\n  ylab(\"Elo\") +\n  theme_minimal()\n\nggp\n\n# singles_elo\n\n############# Get chances matrix ##############################################\nsource(\"foos_chances_matrix.R\")\n\n# odds_df <- as.data.frame(player_odds, row.names = player_list)\n# names(odds_df) <- player_list\n# heatmap(odds_df, Rowv=NA, Colv=NA, col = heat.colors(256), scale=\"column\", margins=c(5,10))\n\n",
    "created" : 1477358233199.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3528256889",
    "id" : "5CE99CBF",
    "lastKnownWriteTime" : 1478200730,
    "last_content_update" : 1478200730672,
    "path" : "C:/Users/kevin pan/Dropbox/dev/foos/foos_elo.R",
    "project_path" : "foos_elo.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}